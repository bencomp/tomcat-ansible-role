#!/bin/bash
#
# This is a conglomeration of work by Steve Young, Richard Wincewicz, William Panting, Adam Vessey, Jason MacWilliams, Gervais de Montbrun

# it's a service!
# chkconfig: 2345 95 15
# description: Tomcat, without Islandora stack.
### BEGIN INIT INFO
# Provides: tomcat
# Required-Start: $all
# Required-Stop: $all
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start tomcat at boot.
# Description: Start the tomcat servlet container.
### END INIT INFO

# Source function library.
if [ -f /etc/init.d/functions ]; then
     . /etc/init.d/functions
fi

#export FEDORA_HOME=/usr/local/fedora
export CATALINA_HOME={{ tomcat_install_path }}/{{ tomcat_service_name }}
export JAVA_HOME={{ tomcat_java_home }}
export CATALINA_PID={{ tomcat_install_path }}/{{ tomcat_service_name }}/temp/tomcat.pid
export CATALINA_BASE={{ tomcat_install_path }}/{{ tomcat_service_name }}
export CATALINA_OPTS=-Xms{{ tomcat_jvm_memory_percentage_xms*ansible_memtotal_mb//100 }}M -Xmx{{ tomcat_jvm_memory_percentage_xmx*ansible_memtotal_mb//100 }}M -server -XX:+UseParallelGC {% if tomcat_debug_mode == True %}-Xdebug -Xrunjdwp:transport=dt_socket,address={{ tomcat_port_debug }},server=y,suspend=n{% endif %}

export JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom

export TOMCAT_USER={{ tomcat_user }}

#****** CHECK FOR ROOT STATUS AND BLOCK IT ******#
if [ -z "$TOMCAT_USER" ]; then
  ASROOT=0 # a flag to force "run as root"
  for var in "$@"; do
    case $var in
      "-r")
        ASROOT=1
        ;;
    esac
  done

  # check for root status
  if [[ $EUID -eq 0 && $ASROOT -eq 0 ]]; then
    echo "It looks like you're trying to run this script as root"
    echo "This is not normally allowed, to force it use $0 -r"
    exit 1
  fi
fi

# pgrep -nf -u tomcat /opt/tomcat.*tomcat
PID_SEARCH="pgrep -nf -u $TOMCAT_USER $CATALINA_BASE.*tomcat"
START_STOP_WAIT=30

run_this_one() {
  if [ -n "$TOMCAT_USER" ]; then
    #Specify a shell, because the tomcat user should not have one in passwd (so as to not let people login as tomcat)
    /bin/su - $TOMCAT_USER --shell=/bin/bash --command="$1"
  else
    $1
  fi
}

start() {
  if [ `$PID_SEARCH` ]; then
    echo "Tomcat already running! Try running with \"force-start\" if you know for certain it is not running."
  else
    if [ -f $CATALINA_PID ]; then
      echo "Removing/clearing stale PID file"
      rm -rf $CATALINA_PID
    fi
    force_start
  fi
}

force_start() {
  echo "> Starting..."
  run_this_one $CATALINA_HOME/bin/startup.sh
  echo "Waiting for server startup to complete"
  sleep 2
  startwait=$START_STOP_WAIT
  count=0
  while [ $count -lt $startwait ]; do
    echo -n "."
    sleep 1
    count=`expr $count + 1`
    PID=`$PID_SEARCH`
    if [ ! $PID = "" ]; then
      break
    fi
  done
  ps -p $PID &>/dev/null 2>/dev/null
    RETVAL=$?
    if [ $RETVAL = 0 ]; then
      echo ""
      echo "Tomcat has started..."
      return 0
    else
      echo ""
      echo "Tomcat failed to start... Check your logs"
      return 1
    fi
}

stop()
{
  PID=`$PID_SEARCH`
  if [ $PID ]; then
    echo "> Stopping..."
    run_this_one $CATALINA_HOME/bin/shutdown.sh
    echo "Waiting for server shutdown to complete"
    sleep 2
    kwait=$START_STOP_WAIT
    count=0;
    while [ $count -lt $kwait ]; do
      sleep 1
      count=`expr $count + 1`
      PID=`$PID_SEARCH`
      if [ ! $PID = "" ]; then
        echo -n "."
      else
        break
      fi
    done
    echo ""
    if [ $count -eq $kwait ]; then
      echo "process is still running after $START_STOP_WAIT seconds, killing process"
      PID=`$PID_SEARCH`
      kill $PID
      sleep 5

      # if itâ€™s still running use kill -9
      PID=`$PID_SEARCH`
      if [ $PID ]; then
      echo "process is still running, using kill -9"
      kill -9 $PID
      sleep 5
      fi
    fi
    PID=`$PID_SEARCH`
    if [ $PID ]; then
      echo "process is still running, I give up"
      return 1
    else
      if [ -f $CATALINA_PID ]; then
        echo "Removing/clearing stale PID file"
        rm -rf $CATALINA_PID
      fi
      echo "Tomcat shutdown completed"
      return 0
    fi
  else
    echo "Tomcat is not currently running, you can start it with $0 start"
  fi
}

status()
{
  PID=`$PID_SEARCH`

  if [ $PID ]; then
    echo "Tomcat is up and running with PID="$PID
    return 0
  else
    echo "Tomcat is not currently running, you can start it with $0 start"
    return 1
  fi

}

deploy()
{
  stop
  start
  echo "Sleeping for 60 seconds"
  sleep 60
  stop
}

case "$1" in
  start) start ;;
  force-start) force_start ;;
  stop) stop ;;
  restart) stop ; start ;;
  status) status ;;
  deploy) deploy ;;
  *)
    echo "Usage: `basename $0` {start|stop|status|restart|force-start}"
    exit 2
  ;;
esac

exit $?
